<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>discovery-ui</artifactId>
		<groupId>com.jubl.food.nextgen</groupId>
		<version>1.6-SNAPSHOT</version>
		<relativePath>..</relativePath> <!-- lookup parent from repository -->
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>discovery-ui-web</artifactId>
	<packaging>war</packaging>
	<properties>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<java.version>11</java.version>
		<checkstyle.configLocation>${project.basedir}/../config/checkstyle-checker.xml</checkstyle.configLocation>
		<checkstyle.suppress.configLocation>${project.basedir}/../config/checkstyle-suppressions.xml</checkstyle.suppress.configLocation>
		<liquibase.version>4.4.0</liquibase.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>${project.parent.groupId}</groupId>
			<artifactId>discovery-ui-service</artifactId>
			<version>${project.parent.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.parent.groupId}</groupId>
			<artifactId>discovery-ui-service</artifactId>
			<version>${project.parent.version}</version>
			<scope>test</scope>
			<type>test-jar</type>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>${httpclient.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bootstrap</artifactId>
            <version>3.0.4</version>
        </dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>junit</groupId> <!-- NOT org.junit here -->
			<artifactId>junit-dep</artifactId>
			<version>4.8.2</version>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-inline</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.testng/testng -->
		<dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>
		<build>
		 <finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<id>copy-public-one</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>public</outputDirectory>
							<resources>
								<resource>
									<directory>../public</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.2.2</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<webResources>
						<resource>
							<directory>public</directory>
							<targetPath>public</targetPath>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>com.jubl.food.nextgendiscovery.web.NextgendiscoveryApplication</mainClass>
				</configuration>
			</plugin>
		<plugin>
         <groupId>com.jublfood.maven.plugins</groupId>
         <artifactId>cobetura-report-plugin</artifactId>
         <version>1.1</version>
         <executions>
             <execution>
                 <id>aggregate</id>
                 <phase>verify</phase>
                 <goals>
                     <goal>aggregate</goal>
                 </goals>
             </execution>
         </executions>
     </plugin>
     
		</plugins>
	</build>
	<!-- multiple maven profiles for multiple environment -->
	<profiles>
		<profile>
			<id>production</id>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<excludes>
							<!-- exclude any non filtered resources -->
							<exclude>*.jks</exclude>
							<exclude>data/**</exclude>
						</excludes>
						<filtering>true</filtering>
					</resource>
					<resource>
						<directory>src/main/resources</directory>
						<includes>
							<!-- include non filtered resource -->
							<include>*.jks</include>
							<include>data/**</include>
						</includes>
						<filtering>false</filtering>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>install node and npm</id>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<environmentVariables>
										<NODE_ENV>prod</NODE_ENV>
										<GIT_SSH_COMMAND>ssh</GIT_SSH_COMMAND>
									</environmentVariables>
									<nodeVersion>v16.13.1</nodeVersion>
									<npmVersion>8.1.2</npmVersion>
									<installDirectory>../target</installDirectory>
								</configuration>
							</execution>
							<execution>
								<id>npm install</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<environmentVariables>
										<NODE_ENV>prod</NODE_ENV>
										<GIT_SSH_COMMAND>ssh</GIT_SSH_COMMAND>
									</environmentVariables>
									<installDirectory>../target</installDirectory>
									<workingDirectory>public</workingDirectory>
									<arguments>install</arguments>
								</configuration>
							</execution>
							<execution>
								<id>npm build</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<environmentVariables>
										<NODE_ENV>prod</NODE_ENV>
										<GIT_SSH_COMMAND>ssh</GIT_SSH_COMMAND>
									</environmentVariables>
									<installDirectory>../target</installDirectory>
									<workingDirectory>public</workingDirectory>
									<arguments>run prod</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<excludes>
							<!-- exclude any non filtered resources -->
							<exclude>*.jks</exclude>
							<exclude>data/**</exclude>
						</excludes>
						<filtering>true</filtering>
					</resource>
					<resource>
						<directory>src/main/resources</directory>
						<includes>
							<!-- include non filtered resource -->
							<include>*.jks</include>
							<include>data/**</include>
						</includes>
						<filtering>false</filtering>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>install node and npm</id>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<environmentVariables>
										<NODE_ENV>dev</NODE_ENV>
										<GIT_SSH_COMMAND>ssh</GIT_SSH_COMMAND>
									</environmentVariables>
									<nodeVersion>v16.13.1</nodeVersion>
									<npmVersion>8.1.2</npmVersion>
									<installDirectory>../target</installDirectory>
								</configuration>
							</execution>
							<execution>
								<id>npm install</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<environmentVariables>
										<NODE_ENV>dev</NODE_ENV>
										<GIT_SSH_COMMAND>ssh</GIT_SSH_COMMAND>
									</environmentVariables>
									<installDirectory>../target</installDirectory>
									<workingDirectory>public</workingDirectory>
									<arguments>install</arguments>
								</configuration>
							</execution>
							<execution>
								<id>npm build</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<environmentVariables>
										<NODE_ENV>dev</NODE_ENV>
										<GIT_SSH_COMMAND>ssh</GIT_SSH_COMMAND>
									</environmentVariables>
									<installDirectory>../target</installDirectory>
									<workingDirectory>public</workingDirectory>
									<arguments>run dev</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>stage</id>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<excludes>
							<!-- exclude any non filtered resources -->
							<exclude>*.jks</exclude>
							<exclude>data/**</exclude>
						</excludes>
						<filtering>true</filtering>
					</resource>
					<resource>
						<directory>src/main/resources</directory>
						<includes>
							<!-- include non filtered resource -->
							<include>*.jks</include>
							<include>data/**</include>
						</includes>
						<filtering>false</filtering>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>install node and npm</id>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<environmentVariables>
										<GIT_SSH_COMMAND>ssh</GIT_SSH_COMMAND>
										<NODE_ENV>qa</NODE_ENV>
									</environmentVariables>
									<nodeVersion>v16.13.1</nodeVersion>
									<npmVersion>8.1.2</npmVersion>
									<installDirectory>../target</installDirectory>
								</configuration>
							</execution>
							<execution>
								<id>npm install</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<environmentVariables>
										<GIT_SSH_COMMAND>ssh</GIT_SSH_COMMAND>
										<NODE_ENV>qa</NODE_ENV>
									</environmentVariables>
									<installDirectory>../target</installDirectory>
									<workingDirectory>public</workingDirectory>
									<arguments>install</arguments>
								</configuration>
							</execution>
							<execution>
								<id>npm build</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<installDirectory>../target</installDirectory>
									<workingDirectory>public</workingDirectory>
									<arguments>run dev</arguments>
									<environmentVariables>
										<GIT_SSH_COMMAND>ssh</GIT_SSH_COMMAND>
										<NODE_ENV>qa</NODE_ENV>
									</environmentVariables>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>local</id>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<excludes>
							<!-- exclude any non filtered resources -->
							<exclude>*.jks</exclude>
							<exclude>data/**</exclude>
						</excludes>
						<filtering>true</filtering>
					</resource>

					<resource>
						<directory>src/main/resources</directory>
						<includes>
							<!-- include non filtered resource -->
							<include>*.jks</include>
							<include>data/**</include>
						</includes>
						<filtering>false</filtering>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>install node and npm</id>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<environmentVariables>
										<NODE_ENV>local</NODE_ENV>
										<GIT_SSH_COMMAND>ssh</GIT_SSH_COMMAND>
									</environmentVariables>
									<nodeVersion>v16.13.1</nodeVersion>
									<npmVersion>8.1.2</npmVersion>
									<installDirectory>../target</installDirectory>
								</configuration>
							</execution>
							<execution>
								<id>npm install</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<environmentVariables>
										<NODE_ENV>local</NODE_ENV>
										<GIT_SSH_COMMAND>ssh</GIT_SSH_COMMAND>
									</environmentVariables>
									<installDirectory>../target</installDirectory>
									<workingDirectory>public</workingDirectory>
									<arguments>install</arguments>
								</configuration>
							</execution>
							<execution>
								<id>npm build</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<environmentVariables>
										<NODE_ENV>local</NODE_ENV>
										<GIT_SSH_COMMAND>ssh</GIT_SSH_COMMAND>
									</environmentVariables>
									<installDirectory>../target</installDirectory>
									<workingDirectory>public</workingDirectory>
									<arguments>run dev</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	
</project>